{"version":3,"file":"static/js/732.4553092d.chunk.js","mappings":"wPAIMA,GAAQC,EAAAA,EAAAA,OAAK,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,CACvCC,MAAO,GACPC,SAAU,KAFZ,eAAOC,EAAP,KAAiBC,EAAjB,KAIA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KAEMC,GAAeC,EAAAA,EAAAA,cAAY,SAACC,GAChC,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdV,GAAY,SAAAW,GAAS,yBAChBA,GADgB,cAElBF,EAAOC,OAEVR,EAAS,MACR,IAEGU,GAAgBN,EAAAA,EAAAA,cAAY,SAACT,GACjC,OAAOA,EAAMgB,MAAM,gCAClB,IAEGC,GAAeR,EAAAA,EAAAA,aAAW,mCAAC,WAAOC,GAAP,oEAC/BA,EAAEQ,iBACFb,EAAS,IAEJU,EAAcb,EAASF,OAJG,uBAK7BK,EAAS,sCALoB,+BAS3BH,EAASD,SAASkB,OAAS,GATA,uBAU7Bd,EAAS,+CAVoB,iCAc/BE,GAAa,GAdkB,mBAiBvB,IAAIa,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,QAjBpB,QAkB7BxB,EAAS,SAlBoB,kDAoB7BQ,EAAS,qDApBoB,yBAsB7BE,GAAa,GAtBgB,6EAAD,sDAwB7B,CAACL,EAAUL,EAAUkB,IAExB,OACE,gBAAKQ,UAAU,kBAAf,UACE,iBAAKA,UAAU,YAAf,WACE,iBAAKA,UAAU,eAAf,WACE,sDACA,uDAEDnB,IAAS,gBAAKmB,UAAU,gBAAf,SAAgCnB,KAC1C,kBAAMoB,SAAUP,EAAhB,WACE,iBAAKM,UAAU,aAAf,WACE,kBAAOE,QAAQ,QAAf,oBACA,kBACEC,KAAK,QACLC,GAAG,QACHf,KAAK,QACLC,MAAOX,EAASF,MAChB4B,SAAUpB,EACVqB,YAAY,mBACZC,UAAQ,EACRP,UAAU,aACVQ,SAAUzB,QAGd,iBAAKiB,UAAU,aAAf,WACE,kBAAOE,QAAQ,WAAf,uBACA,kBACEC,KAAK,WACLC,GAAG,WACHf,KAAK,WACLC,MAAOX,EAASD,SAChB2B,SAAUpB,EACVqB,YAAY,sBACZC,UAAQ,EACRP,UAAU,aACVQ,SAAUzB,QAGd,mBACEoB,KAAK,SACLH,UAAU,eACVQ,SAAUzB,EAHZ,SAKGA,EAAY,gBAAkB,cAGnC,gBAAKiB,UAAU,eAAf,UACE,cAAGA,UAAU,oBAAb,4EASV5B,EAAMqC,YAAc,QAEpB,S,qBC7GA,SAASC,EAAmBC,EAAKb,EAASc,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAON,EAAII,GAAKC,GAChB1B,EAAQ2B,EAAK3B,MACjB,MAAOT,GAEP,YADA+B,EAAO/B,GAILoC,EAAKC,KACPpB,EAAQR,GAERO,QAAQC,QAAQR,GAAO6B,KAAKN,EAAOC,GAIxB,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAI5B,SAAQ,SAAUC,EAASc,GACpC,IAAID,EAAMU,EAAGK,MAAMJ,EAAME,GAEzB,SAASX,EAAMvB,GACboB,EAAmBC,EAAKb,EAASc,EAAQC,EAAOC,EAAQ,OAAQxB,GAGlE,SAASwB,EAAOa,GACdjB,EAAmBC,EAAKb,EAASc,EAAQC,EAAOC,EAAQ,QAASa,GAGnEd,OAAMe,O","sources":["components/Login.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useCallback, memo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\n\nconst Login = memo(() => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    setError('');\n  }, []);\n\n  const validateEmail = useCallback((email) => {\n    return email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\n  }, []);\n\n  const handleSubmit = useCallback(async (e) => {\n    e.preventDefault();\n    setError('');\n    \n    if (!validateEmail(formData.email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n\n    if (formData.password.length < 6) {\n      setError('Password must be at least 6 characters long');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      navigate('/home');\n    } catch (err) {\n      setError('An error occurred during login. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [formData, navigate, validateEmail]);\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-box\">\n        <div className=\"login-header\">\n          <h2>Welcome to Clothes Store</h2>\n          <p>Please login to continue</p>\n        </div>\n        {error && <div className=\"error-message\">{error}</div>}\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              placeholder=\"Enter your email\"\n              required\n              className=\"form-input\"\n              disabled={isLoading}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n              placeholder=\"Enter your password\"\n              required\n              className=\"form-input\"\n              disabled={isLoading}\n            />\n          </div>\n          <button \n            type=\"submit\" \n            className=\"login-button\"\n            disabled={isLoading}\n          >\n            {isLoading ? 'Logging in...' : 'Login'}\n          </button>\n        </form>\n        <div className=\"login-footer\">\n          <p className=\"login-footer-text\">\n            By logging in, you agree to our Terms and Conditions\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nLogin.displayName = 'Login';\n\nexport default Login; ","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Login","memo","navigate","useNavigate","useState","email","password","formData","setFormData","error","setError","isLoading","setIsLoading","handleChange","useCallback","e","target","name","value","prevState","validateEmail","match","handleSubmit","preventDefault","length","Promise","resolve","setTimeout","className","onSubmit","htmlFor","type","id","onChange","placeholder","required","disabled","displayName","asyncGeneratorStep","gen","reject","_next","_throw","key","arg","info","done","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}