{"version":3,"file":"static/js/719.e88a45d3.chunk.js","mappings":"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","sources":["controllers/redux_store/action/productsAction.jsx","controllers/cards/component.jsx","controllers/FetchedItems/index.js","controllers/Body/helperMethods.js","controllers/Body/component.jsx","controllers/ProductDetail/component.jsx","controllers/Header/component.jsx","controllers/Footer/component.jsx","controllers/WholeItem/ItemDetails.jsx","controllers/WholeItem/component.jsx","controllers/Home/component.jsx"],"sourcesContent":["import { ActionTypes } from \"../constants/actionType\";\nconst {\n  UPDATE_PRODUCT_COUNTER,\n  SET_CHECKOUT,\n  INCREMENT,\n  DECREMENT,\n  SET_PRODUCTS,\n} = ActionTypes;\n\nexport function increment(id) {\n  const payload = {\n    id: id,\n    updateType: INCREMENT,\n  };\n  // console.log(\"THis is payload \", payload);\n  return { type: UPDATE_PRODUCT_COUNTER, payload };\n}\nexport function decrement(id) {\n  const payload = {\n    id: id,\n    updateType: DECREMENT,\n  };\n  // console.log(\"THis is payload \", payload);\n  return { type: UPDATE_PRODUCT_COUNTER, payload };\n}\n// export function updateProduct(payload = {}) {\n//   return { type: UPDATE_PRODUCT_COUNTER, payload };\n// }\nexport function setProducts(products) {\n  return { type: SET_PRODUCTS, payload: products };\n}\nexport function checkout() {\n  console.log(\"This function have called\");\n  return { type: SET_CHECKOUT };\n}\n","import React from \"react\";\nimport \"./card.css\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { increment, decrement } from \"../redux_store/action/productsAction\";\nexport default function Card({ item }) {\n  const { image, title, id, count } = item;\n  const dispatch = useDispatch();\n  function increaseItemQuantity(id) {\n    dispatch(increment(id));\n  }\n  function decreaseItemQuantity(id) {\n    dispatch(decrement(id));\n  }\n  return (\n    <div className=\"product__card\">\n      <div className=\"card\">\n        <Link\n          to={{\n            pathname: `/productDetails/${id}`,\n          }}\n        >\n          <img src={image} alt={title} />\n        </Link>\n      </div>\n      <div className=\"meal_title\">\n        <p>{title}</p>\n      </div>\n      <div className=\"card_addItem\">\n        <div>\n          <button\n            onClick={() => decreaseItemQuantity(id)}\n            disabled={count === 0 ? true : false}\n          >\n            -\n          </button>{\" \"}\n          {count} <button onClick={() => increaseItemQuantity(id)}>+</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import axios from \"axios\";\nexport async function getProducts() {\n  //   let dispatch = useDispatch();\n  let url = `https://fakestoreapi.com/products`;\n  const products = await axios.get(url).catch((err) => console.log(err));\n  return products;\n}\nexport async function getProductsWithId(id) {\n  //   let dispatch = useDispatch();\n  let url = `https://fakestoreapi.com/products/${id}`;\n  const products = await axios.get(url).catch((err) => console.log(err));\n  return products;\n}\n","function findCound(item, cart) {\n  let obj = cart.find((object) => parseInt(object.id) === parseInt(item.id));\n  if (obj) return obj.count;\n  else return 0;\n}\nexport function updateProductWithItsCount(products, cart) {\n  let newArr = [];\n  newArr = products.map((item, index) => {\n    return {\n      id: item.id,\n      image: item.image,\n      count: findCound(item, cart),\n      title: item.title,\n    };\n  });\n  return newArr;\n}\n","// https://fakestoreapi.com/products\n\nimport React, { useEffect } from \"react\";\nimport Card from \"../cards/component\";\nimport { getProducts } from \"../FetchedItems\";\nimport \"./styles.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setProducts } from \"../redux_store/action/productsAction\";\nimport { updateProductWithItsCount } from \"./helperMethods\";\nexport default function Body() {\n  let dispatch = useDispatch();\n  let { products, productCart } = useSelector((state) => state);\n  // sessionStorage.setItem(\"productCart\", JSON.stringify(productCart));\n  useEffect(() => {\n    async function fetchData() {\n      let products = await getProducts();\n      dispatch(setProducts(products.data));\n    }\n    fetchData();\n  }, [dispatch]);\n  const updatedProductWithCount = updateProductWithItsCount(\n    products,\n    productCart\n  );\n  return (\n    <div className=\"product__container flex-function\">\n      <div className=\"product__subcontainer flex-function\">\n        {updatedProductWithCount.map((item, index) => (\n          <Card\n            item={item}\n            id={index + 1}\n            key={Math.random() * products.length + index}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { Link, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { increment } from \"../redux_store/action/productsAction\";\nimport \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport { getProductsWithId } from \"../FetchedItems/index\";\n\nexport default function Cart() {\n  const { productCart } = useSelector((state) => state);\n  const [getProduct, setGetProduct] = useState({});\n  let { productId } = useParams();\n  useEffect(() => {\n    async function fetchProduct(productId) {\n      let fetchedProduct = await getProductsWithId(productId);\n      setGetProduct(fetchedProduct.data);\n    }\n    fetchProduct(productId);\n  }, [productId]);\n\n  // const { image, title, description, price, rating, id } = getProduct;\n\n  const [isPresent, setPresent] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useState(() => {\n    let obj = productCart.find(\n      (item) => parseInt(item.id) === parseInt(productId)\n    );\n    if (obj) setPresent(true);\n    else setPresent(false);\n  }, [productId]);\n\n  function addToCartItem(id) {\n    dispatch(increment(id));\n    setPresent(true);\n  }\n\n  function addItemToCart(id) {\n    !isPresent && dispatch(increment(id));\n  }\n\n  // console.log(getProduct);\n  return (\n    <div className=\"product_details\">\n      <div className=\"left_product_details\">\n        <img src={getProduct?.image} alt={getProduct?.title} />\n        <div className=\"card__button\">\n          {!isPresent ? (\n            <button\n              className=\"addToCart_button\"\n              onClick={() => addToCartItem(productId)}\n            >\n              Add To Cart\n            </button>\n          ) : (\n            <Link to=\"/cart\">\n              <button className=\"addToCart_button\">Go to Cart</button>\n            </Link>\n          )}\n          <Link to=\"/cart\">\n            <button\n              onClick={() => addItemToCart(productId)}\n              className=\"buyNow_button\"\n            >\n              Buy Now\n            </button>\n          </Link>\n        </div>\n      </div>\n      <div className=\"right_product_details\">\n        <div className=\"title\">{getProduct?.title}:</div>\n        <div className=\"price\">\n          <span className=\"rupee\">₹</span>\n          {getProduct?.price}\n        </div>\n        <div className=\"rating\">\n          {getProduct?.rating?.rate} <span className=\"start_icon\">★</span>\n        </div>\n        <div className=\"description\">\n          <h4>Product Details:</h4>\n          <div className=\"product__description\"> {getProduct?.description}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\n\nfunction countProduct(product) {\n  let count = 0;\n  product.forEach((element) => {\n    count += element.count;\n  });\n  return count;\n}\n\nfunction Header() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const store = useSelector((state) => state).productCart;\n  const itemCount = countProduct(store);\n\n  const handleCartClick = () => {\n    if (location.pathname !== '/home/cart') {\n      navigate('/home/cart');\n    }\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__subcontainer\">\n        <div className=\"header_icon\">\n          <Link to=\"/home\">Home</Link>\n        </div>\n        <div \n          className={`header__cart ${location.pathname === '/home/cart' ? 'active' : ''}`}\n          onClick={handleCartClick}\n          role=\"button\"\n          title={`Cart (${itemCount} items)`}\n        >\n          <div className=\"cart-icon\">\n            🛒\n            {itemCount > 0 && (\n              <span className=\"product__count\">\n                {itemCount}\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./styles.css\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      Made with &nbsp; <span className=\"footer__heart\">❤</span> &nbsp; by Suresh\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport { useDispatch } from \"react-redux\";\nimport { increment, decrement } from \"../redux_store/action/productsAction\";\nimport { getProductsWithId } from \"../FetchedItems\";\n\n\n\n\n\nfunction ItemDetails({ productId, count }) {\n  let dispatch = useDispatch();\n  const [product, setProduct] = useState({});\n  // console.log(\"This is nin \", productInfo);\n\n  useEffect(() => {\n    async function fetchProduct(productId) {\n      let fetchedProduct = await getProductsWithId(productId);\n      setProduct(fetchedProduct.data);\n    }\n    fetchProduct(productId);\n  }, [productId]);\n\n  // let { image, price, title, id } = productInfo;\n  function increaseProductQuantity(id) {\n    dispatch(increment(id));\n  }\n  function decreaseProductQuantity(id) {\n    dispatch(decrement(id));\n  }\n  return (\n    <div className=\"item__details\">\n      <div className=\"item__left\">\n        <div className=\"item_left__img\">\n          <img src={product?.image} alt={product?.title} />\n        </div>\n        <div className=\"item__button\">\n          <button onClick={() => decreaseProductQuantity(productId)}>-</button>\n          {count}\n          <button onClick={() => increaseProductQuantity(productId)}>+</button>\n        </div>\n      </div>\n      <div className=\"item__right\">\n        <p>{product?.title}</p>\n        <p>₹{product?.price}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default ItemDetails;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ItemDetails from \"./ItemDetails\";\nimport \"./styles.css\";\nimport { checkout, setProducts } from \"../redux_store/action/productsAction\";\nimport { getProducts } from \"../FetchedItems\";\n\nfunction findTotal(productCart, products) {\n  let sum = 0;\n  productCart.forEach(\n    (item) => (sum += item.count * products[item.id - 1]?.price)\n  );\n  return sum.toFixed(2);\n}\n\nfunction calculateDiscount(total) {\n  const discount = total * 0.1; // 10% discount\n  return discount.toFixed(2);\n}\n\nfunction TotalProducts() {\n  const { productCart, products } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    async function fetchData() {\n      let products = await getProducts();\n      dispatch(setProducts(products.data));\n    }\n    fetchData();\n  }, [dispatch]);\n\n  const subtotal = findTotal(productCart, products);\n  const discount = calculateDiscount(subtotal);\n  const total = (subtotal - discount).toFixed(2);\n\n  const handleCheckout = () => {\n    if (productCart.length === 0) {\n      alert(\"Your cart is empty!\");\n      return;\n    }\n    dispatch(checkout());\n    alert(\"Thank you for your purchase!\");\n  };\n\n  return (\n    <div className=\"user__cart\">\n      <div className=\"left__Cart\">\n        <h2 className=\"cart__title\">Shopping Cart</h2>\n        {productCart.length > 0 ? (\n          productCart.map((item, index) => (\n            <ItemDetails key={index} count={item.count} productId={item.id} />\n          ))\n        ) : (\n          <div className=\"empty__cart\">\n            <h3>Your cart is empty</h3>\n            <p>Add some items to your cart to see them here</p>\n          </div>\n        )}\n      </div>\n      <div className=\"right__Cart\">\n        <h3>Order Summary</h3>\n        <div className=\"cart__summary\">\n          <div className=\"summary__row\">\n            <span>Subtotal</span>\n            <span>₹ {subtotal}</span>\n          </div>\n          <div className=\"summary__row\">\n            <span>Discount (10%)</span>\n            <span>- ₹ {discount}</span>\n          </div>\n          <div className=\"summary__row total\">\n            <span>Total</span>\n            <span>₹ {total}</span>\n          </div>\n        </div>\n        <button \n          className=\"checkout__button\"\n          onClick={handleCheckout}\n          disabled={productCart.length === 0}\n        >\n          {productCart.length === 0 ? 'Cart is Empty' : 'Proceed to Checkout'}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TotalProducts;\n","import React from \"react\";\nimport Body from \"../Body/component\";\nimport Cart from \"../ProductDetail/component\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Header from \"../Header/component\";\nimport Footer from \"../Footer/component\";\nimport TotalProducts from \"../WholeItem/component\";\n\nfunction Home() {\n  return (\n    <>\n      <Header />\n      <Routes>\n        <Route path=\"productDetails/:productId\" element={<Cart />} />\n        <Route path=\"cart\" element={<TotalProducts />} />\n        <Route path=\"/\" element={<Body />} />\n        <Route path=\"*\" element={<div>404 Not Found!</div>} />\n      </Routes>\n      <Footer />\n    </>\n  );\n}\n\nexport default Home;\n"],"names":["UPDATE_PRODUCT_COUNTER","ActionTypes","SET_CHECKOUT","INCREMENT","DECREMENT","SET_PRODUCTS","increment","id","type","payload","updateType","decrement","setProducts","products","Card","item","image","title","count","dispatch","useDispatch","className","to","pathname","src","alt","onClick","decreaseItemQuantity","disabled","increaseItemQuantity","getProducts","axios","catch","err","console","log","getProductsWithId","url","findCound","cart","obj","find","object","parseInt","Body","useSelector","state","productCart","useEffect","data","fetchData","updatedProductWithCount","map","index","updateProductWithItsCount","Math","random","length","Cart","useState","getProduct","setGetProduct","productId","useParams","fetchedProduct","fetchProduct","isPresent","setPresent","price","rating","rate","description","navigate","useNavigate","location","useLocation","itemCount","product","forEach","element","countProduct","role","setProduct","subtotal","sum","toFixed","findTotal","discount","total","calculateDiscount","alert","path"],"sourceRoot":""}